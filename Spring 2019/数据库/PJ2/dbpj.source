SET min_parallel_table_scan_size = 1;

CREATE FUNCTION levenshtein_distance(varchar, varchar) RETURNS integer
   AS '_OBJWD_/funcs' LANGUAGE C STRICT PARALLEL SAFE;
CREATE FUNCTION jaccard_index(varchar, varchar) RETURNS double precision
   AS '_OBJWD_/funcs' LANGUAGE C STRICT PARALLEL SAFE;

select count(*) from restaurantphone rp, addressphone ap where levenshtein_distance(rp.phone, ap.phone) < 4;
select count(*) from restaurantaddress ra, restaurantphone rp where levenshtein_distance(ra.name, rp.name) < 3;
select count(*) from restaurantaddress ra, addressphone ap where levenshtein_distance(ra.address, ap.address) < 4;
select count(*) from restaurantphone rp, addressphone ap where jaccard_index(rp.phone, ap.phone) > 0.6;
select count(*) from restaurantaddress ra, restaurantphone rp where jaccard_index(ra.name, rp.name) > 0.65;
select count(*) from restaurantaddress ra, addressphone ap where jaccard_index(ra.address, ap.address) > 0.8;

DROP FUNCTION levenshtein_distance(varchar, varchar);
DROP FUNCTION jaccard_index(varchar, varchar);

SET min_parallel_table_scan_size TO default;

