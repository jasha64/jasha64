#地球人有伟大的十进制，火星人当然也有自己的进制。
#火星人的数字总是用0或者1来表示的，比如1101，
#跟我们的二进制码很像，但是火星人数字十位上是2进制，百位上是3进制，
#千位上是5进制，依次类推，除了个位，每一位的进制都是地球人数字的质数。
#
#例如：前面的1101，转化为地球的十进制值就是
#1*(5*3*2*1)+1*(3*2*1)+0*(2*1)+1*1=37。
#
#现在我们来实现10位以下火星码转化为地球十进制值的程序。
#当用户输入超出九位或者非火星码格式时，程序会让用户重新输入，直至用户输入格式正确为止，之后程序显示火星码对应的十进制数值。

import re
patStr = re.compile('^[01]{1,9}$')
iStr = input('请输入十位以下的火星码：')
while not patStr.match(iStr):
    iStr = input('请输入十位以下的火星码：')

primeList = (1, 2, 3, 5, 7, 11, 13, 17, 19)
iStr = iStr[::-1] #利用切片实现字符串反转
cur = 1 #当前位的权值
res = 0
for i in range(len(iStr)):
    cur *= primeList[i]
    res += int(iStr[i]) * cur
print('该火星码对应的十进制值为%d' % res)
