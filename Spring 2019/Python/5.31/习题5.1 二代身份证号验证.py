#公民身份号码是特征组合码，由十七位数字本体码和一位校验码组成。
#排列顺序从左至右依次为：六位数字地址码，八位数字出生日期码，
#三位数字顺序码和一位校验码。其中校验码规则如下：
#(1) 十七位数字本体码加权求和公式
# S = sum (Ai * Wi) , i = 2, ... , 18
# Y = S mod 11
# i: 表示号码字符从右至左包括校验码字符在内的位置序号
# Ai:表示第i位置上的身份证号码字符值
# Wi:表示第i位置上的加权因子，i从18到1对应的Wi依次为
# 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1
#(2) 校验码字符值的计算
# Y=0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10对应的身份证最后一位分别为
#   1, 0, X, 9, 8, 7, 6, 5, 4, 3, 2
#当用户输入17位号码时，程序输出完整的18位号码；
#当用户输入18位号码时，程序检查该号码是否正确。

def solve(x, check):
    W = (7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2)
    V = ('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2')
    s = 0
    for i in range(17):
        s += int(x[i]) * W[i]
    s %= 11
    r = V[s]
    if check:
        if x[17] == r:
            print('该身份证号是正确的。')
        else:
            print('该身份证号是错误的。')
    else:
        x += r
        print('完整的身份证号：%s' % x)

def main():
    import re
    pat = re.compile(r'^\d{17}[0-9X]?$')
    istr = input('请输入身份证号：')
    while not pat.match(istr):
        istr = input('请输入身份证号：')
    solve(istr, len(istr)==18)

if __name__ == '__main__':
    main()
